package com.maxcropdata.maxcropemployee.model.registrationform;

import com.maxcropdata.maxcropemployee.shared.utils.Helper;

import java.util.Date;
import java.util.Objects;

/*
    data from this form will be sent to the server
    server will use them to authorize user and will send back
    information about account like: login, workerId, expirationDate
    hash of password will be set to the account
    salt will be generated locally, not need for it on the server
    but we must ensure it will be deterministic and same on all devices
    for the same account
 */
public class RegistrationForm {
    private String name;
    private String lastName;
    private int employerCode;
    private String desiredHashedPassword; //generated by controller after generating salt
    private String desiredPlainPassword; //set by user in the form
    private String generatedSalt; //generated with name, last name and dob in the service
    private Date dateOfBirth; //required for account authorization

    public RegistrationForm(Builder builder) {
        this.name = builder.name;
        this.lastName = builder.lastName;
        this.desiredPlainPassword = builder.desiredPlainPassword;
        this.dateOfBirth = builder.dateOfBirth;
        this.employerCode = builder.employerCode;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        RegistrationForm that = (RegistrationForm) o;
        return employerCode == that.employerCode &&
                Objects.equals(name, that.name) &&
                Objects.equals(lastName, that.lastName) &&
                Objects.equals(desiredHashedPassword, that.desiredHashedPassword) &&
                Objects.equals(desiredPlainPassword, that.desiredPlainPassword) &&
                Objects.equals(generatedSalt, that.generatedSalt) &&
                Objects.equals(dateOfBirth, that.dateOfBirth);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, lastName, employerCode, desiredHashedPassword, desiredPlainPassword, generatedSalt, dateOfBirth);
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getDesiredHashedPassword() {
        return desiredHashedPassword;
    }

    public void setDesiredHashedPassword(String desiredHashedPassword) {
        this.desiredHashedPassword = desiredHashedPassword;
    }

    public String getDesiredPlainPassword() {
        return desiredPlainPassword;
    }

    public void setDesiredPlainPassword(String desiredPlainPassword) {
        this.desiredPlainPassword = desiredPlainPassword;
    }

    public String getGeneratedSalt() {
        return generatedSalt;
    }

    public void setGeneratedSalt(String generatedSalt) {
        this.generatedSalt = generatedSalt;
    }

    public Date getDateOfBirth() {
        return dateOfBirth;
    }

    public void setDateOfBirth(Date dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    public int getEmployerCode() {
        return employerCode;
    }

    public void setEmployerCode(int employerCode) {
        this.employerCode = employerCode;
    }


    public static class Builder {
        private String name;
        private String lastName;
        private String desiredPlainPassword;
        private Date dateOfBirth;
        private int employerCode;

        public Builder employerCode(int employerCode) {
            this.employerCode = employerCode;
            return this;
        }

        public Builder name(String name) {
            this.name = name;
            return this;
        }

        public Builder lastName(String lastName) {
            this.lastName = lastName;
            return this;
        }

        public Builder desiredPlainPassword(String desiredPlainPassword) {
            this.desiredPlainPassword = desiredPlainPassword;
            return this;
        }

        public Builder  dateOfBirth(Date dateOfBirth) {
            this.dateOfBirth = dateOfBirth;
            return this;
        }

        public RegistrationForm build() {
            return new RegistrationForm(this);
        }
    }
}
